name: Docker Image CI

on:
  push:
    branches:
      - release/*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/i-want-to-help-ukraine/i-want-to-help-ukraine-website
          tag-sha: true
          tag-edge: false
          tag-latest: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          file: ./Dockerfile
          build-args: GITHUB_NPM_TOKEN=${{ secrets.PACKAGES_TOKEN }}
            CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            CLOUDINARY_USER_AVATARS_PRESET_NAME=${{ secrets.CLOUDINARY_USER_AVATARS_PRESET_NAME }}
            CLOUDINARY_USER_AVATARS_FOLDER_NAME=${{ secrets.CLOUDINARY_USER_AVATARS_FOLDER_NAME }}
            AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}
            AUTH0_API_URL=${{ secrets.AUTH0_API_URL }}
            AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}
            GRAPHQL_URL=${{ secrets.GRAPHQL_URL }}
            AUTH0_API_TOKEN=${{ secrets.AUTH0_API_TOKEN }}
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: true
          file: ./Dockerfile
          build-args: GITHUB_NPM_TOKEN=${{ secrets.PACKAGES_TOKEN }}
